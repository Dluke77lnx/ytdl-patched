# coding: utf-8
from __future__ import unicode_literals, print_function

import sys
import os
import re
# import socket

sys.path[:0] = ['.']

from youtube_dl.utils import ExtractorError
from youtube_dl.extractor.common import InfoExtractor
from test.helper import FakeYDL


class TestIE(InfoExtractor):
    pass


ie = TestIE(FakeYDL({'verbose': False}))
script_id = 'mastodon'
results = set()


def sanitize_hostname(hostname):
    # trim trailing slashes
    hostname = re.sub(r'[/\\]+$', '', hostname)
    # trim port number
    hostname = re.sub(r':\d+$', '', hostname)
    return hostname


instance_social_api_key = os.environ['INSTANCE_SOCIAL_API_SECRET']
if not instance_social_api_key:
    raise ExtractorError('You must set INSTANCE_SOCIAL_API_SECRET to work')

min_id = None
while True:
    url = 'https://instances.social/api/1.0/instances/list'
    if min_id:
        url = '%s?min_id=%s' % (url, min_id)
    data = ie._download_json(
        url, script_id, note='Paging %s, len(results)=%d' % (min_id, len(results)),
        headers={'Authorization': 'Bearer %s' % instance_social_api_key})
    for instance in data['instances']:
        results.add(sanitize_hostname(instance['name']))
    min_id = data['pagination'].get('next_id')
    if not min_id:
        break

joinmastodon_categories = [
    'general', 'regional', 'art', 'music',
    'journalism', 'activism', 'lgbt', 'games',
    'tech', 'academia', 'adult', 'humor',
    'furry', 'food'
]
for category in joinmastodon_categories:
    url = 'https://api.joinmastodon.org/servers?category=%s' % category
    data = ie._download_json(
        url, script_id, note='Category %s, len(results)=%d' % (category, len(results)))
    for instance in data:
        results.add(sanitize_hostname(instance['domain']))

ie.to_screen('%s: len(results)=%d' % (script_id, len(results)))

if not results:
    raise ExtractorError('no instances found')

results = {x.encode('idna') for x in results}
ie.to_screen('%s: converted domain names to punycode, len(results)=%d' % (script_id, len(results)))

# for it in list(results):
#     try:
#         if not socket.getaddrinfo(it, None):
#             raise ValueError()
#     except BaseException:
#         results.remove(it)

# ie.to_screen('%s: removed unavailable domains, len(results)=%d' % (script_id, len(results)))

pycode = '''# coding: utf-8
# AUTOMATICALLY GENERATED FILE. DO NOT EDIT.
# Generated by ./devscripts/make_mastodon_instance_list.py
from __future__ import unicode_literals

instances = {
    # list of instances here
    "%s"
}

__all__ = ['instances']
''' % '",\n    "'.join(sorted(results))

with open('./youtube_dl/extractor/mastodon/instances.py', 'w') as w:
    w.write(pycode)
